version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    container_name: jogos-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: jogos
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: jogos-elastic
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: jogos-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: src/FCG.TechChallenge.Jogos.Api/Dockerfile
    container_name: jogos-api
    environment:
      # Banco de dados PostgreSQL
      ConnectionStrings__Postgres: "Host=postgres;Port=5432;Database=jogos;Username=postgres;Password=postgres"

      # ElasticSearch (para logs / observabilidade)
      Elastic__Uri: "http://elasticsearch:9200"

      # ASP.NET Core
      ASPNETCORE_URLS: "http://0.0.0.0:8080"

      # Azure Service Bus (Options Pattern → ServiceBusOptions)
      ServiceBus__ConnectionString: ${ServiceBusConn}
      ServiceBus__QueueName: "jogos-outbox"
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - elasticsearch
    restart: unless-stopped

  functions:
    build:
      context: .
      dockerfile: src/FCG.TechChallenge.Jogos.Functions/Dockerfile
    container_name: jogos-functions
    environment:
      # Variáveis sensíveis (lidas do .env)
      ServiceBusConn: ${ServiceBusConn}
      AzureWebJobsStorage: ${AzureWebJobsStorage}
      FUNCTIONS_WORKER_RUNTIME: ${FUNCTIONS_WORKER_RUNTIME:-dotnet-isolated}

      # Outras configs
      Elastic__Uri: "http://elasticsearch:9200"
      ConnectionStrings__Postgres: "Host=postgres;Port=5432;Database=jogos;Username=postgres;Password=postgres"
    depends_on:
      - postgres
      - elasticsearch
    restart: unless-stopped
